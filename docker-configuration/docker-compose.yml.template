version: '3'

services:

  worker:
    build: ./worker
    container_name: {worker}
    environment:
      - BEGIN_YEAR={BEGIN_YEAR}
      - END_YEAR={END_YEAR}
      - API_KEY={API_KEY}
      - WORKER_ID={WORKER_ID}
      - CALL_LIMIT={CALL_LIMIT}
    volumes:
      - type: bind
        source: ./data
        target: /data
    depends_on:
      - coordinator

  # coordinator

  coordinator:
    build: ./coordinator
    container_name: coordinator
    environment:
    - NUMBER_WORKERS={NUMBER_WORKERS}
    ports:
      - "12345:12345"

  # wiki

  wiki:
    build:  ./wiki
    container_name: wiki
    volumes:
      - type: bind
        source: ./data
        target: /data
    command: ["./wait-for-it.sh", "coordinator:1234", "--timeout=0", "--", "python", "wiki.py"]

  # crossref

  crossref:
    build:  ./crossref
    container_name: crossref
    volumes:
      - type: bind
        source: ./data
        target: /data
    command: ["./wait-for-it.sh", "coordinator:1234", "--timeout=0", "--", "python", "crossref.py"]

  # databases
  #mongo:
  #  image: mongo
  #  volumes:
  #    - ./data:/data  # Mount shared volume for MongoDB to access data
  #  environment:
  #    - MONGODB_URI=mongodb://mongo:27017/mydatabase  # MongoDB connection URI
  # elasticsearch:
  #    image: elasticsearch:8.7.0
  #    ports:
  #      - 9200:9200      
  #    environment:
  #      - discovery.type=single-node
      #  - ES_JAVA_OPTS=-Xms1g -Xmx1g
  #      - xpack.security.enabled=false
      # volumes:
      #  - ./data:/usr/share/elasticsearch/dat
  #    mem_limit: 2g

  #neo4j:
  #  image: neo4j
  #  environment:
  #    - NEO4J_AUTH=neo4j/password  # Neo4j authentication

  # jupyter

  #  image: jupyter/minimal-notebook
  #   ports:
  #     - 8888:8888
  #   volumes:
  #     - "./notebooks:/home/jovyan/work/notebooks"
  #   command: ["start-notebook.sh","--NotebookApp.token=''","--NotebookApp.password=''"]

